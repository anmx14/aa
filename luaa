local api = {}
local http = game:GetService("HttpService")



function api:GetUniverseID(placeID: number)
	local API = "https://api.roproxy.com/universes/get-universe-containing-place?placeid="..tostring(placeID)
	local UniverseId = game:GetService("HttpService"):GetAsync(API)
	local Result = game:GetService("HttpService"):JSONDecode(UniverseId)["UniverseId"]

	return Result
end

function api:GetGameFavorites(placeID:number, UniverseId: number)
	--https://games.roblox.com/v1/games/3691044672/favorites/count
	if placeID ~= nil and UniverseId == nil or UniverseId ~= nil then
		UniverseId = api:GetUniverseID(placeID)
		local API = "https://games.roproxy.com/v1/games/"..tostring(UniverseId).."/favorites/count"
		local RetrievedData = game:GetService("HttpService"):GetAsync(API)
		local DecodedData = game:GetService("HttpService"):JSONDecode(RetrievedData)
		
		for Key, Value in pairs(DecodedData) do
			if Key == "favoritesCount" then
				print(Key, Value)
				return Value
			end
		end
	end
	if placeID == nil and UniverseId ~= nil then
		local API = "https://games.roproxy.com/v1/games/"..tostring(UniverseId).."/favorites/count"
		local RetrievedData = game:GetService("HttpService"):GetAsync(API)
		local DecodedData = game:GetService("HttpService"):JSONDecode(RetrievedData)
		
		for Key, Value in pairs(DecodedData) do
			if Key == "favoritesCount" then
				print(Key, Value)
				return Value
			end
		end
	end
end

function api:GetGameLikes(placeID: number, UniverseId: number)
	if placeID == nil or placeID ~= nil and UniverseId ~= nil then
		--We have the UniverseId already so we're gonna make it return the likes data
		local API = "https://games.roproxy.com/v1/games/votes?universeIds="..tostring(UniverseId)
		local DATA = game:GetService("HttpService"):GetAsync(API)
		local ResultData = game:GetService("HttpService"):JSONDecode(DATA)["data"]

		for DataName,DataValue in pairs(ResultData) do
			--print(DataName, DataValue)
			if type(DataValue) == "table" then
				for Key,Value in pairs(DataValue) do
					if Key == "upVotes" then
						return Value
					end
				end
			else--A check just in case they change it back to ["data"]["upVotes"]
				if type(DataValue) == "number" then
					if DataName == "upVotes" then
						return DataValue
					end
				end
			end
		end

	else
		if placeID ~= nil and UniverseId == nil then
			--We'll get the UniverseId from the PlaceId
			UniverseId = api:GetUniverseID(placeID)
			--Finished getting UniverseId
			local API = "https://games.roproxy.com/v1/games/votes?universeIds="..tostring(UniverseId)
			local DATA = game:GetService("HttpService"):GetAsync(API)
			local ResultData = game:GetService("HttpService"):JSONDecode(DATA)["data"]

			for DataName,DataValue in pairs(ResultData) do
				--print(DataName, DataValue)
				if type(DataValue) == "table" then
					for Key,Value in pairs(DataValue) do
						if Key == "upVotes" then
							return Value
						end
					end
				else
					if type(DataValue) == "number" then
						if DataName == "upVotes" then
							return DataValue
						end
					end
				end
			end

		end
	end
end

function api:GetGameDislikes(placeID: number, UniverseId: number)
	if placeID == nil or placeID ~= nil and UniverseId ~= nil then
		--We have the UniverseId already so we're gonna make it return the likes data
		local API = "https://games.roproxy.com/v1/games/votes?universeIds="..tostring(UniverseId)
		local DATA = game:GetService("HttpService"):GetAsync(API)
		local ResultData = game:GetService("HttpService"):JSONDecode(DATA)["data"]

		for DataName,DataValue in pairs(ResultData) do
			--print(DataName, DataValue)
			if type(DataValue) == "table" then
				for Key,Value in pairs(DataValue) do
					if Key == "downVotes" then
						return Value
					end
				end
			else
				if type(DataValue) == "number" then
					if DataName == "downVotes" then
						return DataValue
					end
				end
			end
		end

	else
		if placeID ~= nil and UniverseId == nil then
			--We'll get the UniverseId from the PlaceId
			UniverseId = api:GetUniverseID(placeID)
			--Finished getting UniverseId
			local API = "https://games.roproxy.com/v1/games/votes?universeIds="..tostring(UniverseId)
			local DATA = game:GetService("HttpService"):GetAsync(API)
			local ResultData = game:GetService("HttpService"):JSONDecode(DATA)["data"]

			for DataName,DataValue in pairs(ResultData) do
				--print(DataName, DataValue)
				if type(DataValue) == "table" then
					for Key,Value in pairs(DataValue) do
						if Key == "downVotes" then
							return Value
						end
					end
				else
					if type(DataValue) == "number" then
						if DataName == "downVotes" then
							return DataValue
						end
					end
				end
			end

		end
	end
end

function api:GetGroupInfo(groupID: number, PrintSuccess: boolean)--// Made it easier to grab info for beginners by using self
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GroupInfo.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API = "https://groups.roproxy.com/v1/groups/"..tostring(groupID)
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)
	
	if IsSuccess then
		local DecodedData = http:JSONDecode(Result)
		
		self.AllData = DecodedData
		
		self.id = DecodedData["id"]
		self.name = DecodedData["name"]
		self.description = DecodedData["description"]
		self.owner = {
			buildersClubMembershipType = DecodedData["owner"]["buildersClubMembershipType"],
			hasVerifiedBadge = DecodedData["owner"]["hasVerifiedBadge"],
			userId = DecodedData["owner"]["userId"],
			username = DecodedData["owner"]["username"],
			displayName = DecodedData["owner"]["displayName"],
		}
		self.shout = {
			body = DecodedData["shout"]["body"],
			poster = {
				buildersClubMembershipType = DecodedData["shout"]["poster"]["buildersClubMembershipType"],
				hasVerifiedBadge = DecodedData["shout"]["poster"]["hasVerifiedBadge"],
				userId = DecodedData["shout"]["poster"]["userId"],
				username = DecodedData["shout"]["poster"]["username"],
				displayName = DecodedData["shout"]["poster"]["displayName"]
			},
			created = DecodedData["shout"]["poster"]["created"],
			updated = DecodedData["shout"]["poster"]["updated"]
		}
		self.memberCount = DecodedData["memberCount"]
		self.isBuildersClubOnly = DecodedData["isBuildersClubOnly"]
		self.publicEntryAllowed = DecodedData["publicEntryAllowed"]
		self.hasVerifiedBadge = DecodedData["hasVerifiedBadge"]
		
		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return self
		else
			return self
		end
	end
	
	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetGroupMembers(groupID: number, PrintSuccess: boolean)
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetGroupMembers.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API = "https://groups.roproxy.com/v1/groups/"..tostring(groupID)
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)

	if IsSuccess then
		local DecodedData = http:JSONDecode(Result)
		self.memberCount = DecodedData["memberCount"]

		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return self.memberCount
		else
			return self.memberCount
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetGroupIdFromName(groupName: string, GetFullData: boolean,PrintSuccess: boolean)
	local Subbed = string.gsub(groupName,"%s+","%%20")
	--print(Subbed)
	
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetGroupIdFromName.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API = "https://groups.roproxy.com/v1/groups/search/lookup?groupName="..tostring(Subbed)
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)

	if IsSuccess then
		local DecodedData = http:JSONDecode(Result)
		
		--//Looped Checker

		for GroupNumber, GroupInfo in ipairs(DecodedData["data"]) do
			for Index, Value in pairs(GroupInfo) do
				if Index == "name" then
					if string.lower(Value) == string.lower(groupName) then
						self.GroupId = GroupInfo["id"]
					end
				end
			end
		end

		--//Looped Checker end
		
		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			
			return self.GroupId
			--if GetFullData == true then
			--	self.Data = DecodedData["data"]
			--	return self
			--else
			--	return self.GroupId
			--end
		else
			return self.GroupId
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetGroupRoles(groupID: number, PrintSuccess: boolean)
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetGroupRoles.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API = "https://groups.roproxy.com/v1/groups/"..tostring(groupID).."/roles"
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)

	if IsSuccess then
		local DecodedData = http:JSONDecode(Result)
		self.roles = {}
		
		for _,Role in ipairs(DecodedData["roles"]) do
			self.roles[Role["name"]] = {}
			local NewRole = self.roles[Role["name"]]
			for Property,Value in pairs(Role) do
				NewRole[tostring(Property)] = Value
			end
		end

		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return self.roles
		else
			return self.roles
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetGroupRoleRanks(groupID: number, PrintSuccess: boolean)
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetGroupRoleRanks.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API = "https://groups.roproxy.com/v1/groups/"..tostring(groupID).."/roles"
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)

	if IsSuccess then
		local DecodedData = http:JSONDecode(Result)
		self.roles = {}

		for _,Role in ipairs(DecodedData["roles"]) do
			for Property,Value in pairs(Role) do
				if Property == "rank" then
					self.roles[Role["name"]] = Value
				end
			end
		end

		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return self.roles
		else
			return self.roles
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetUserPrimaryGroup(userID: number, PrintSuccess: boolean)
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetUserPrimaryGroup.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API = "https://groups.roblox.com/v1/users/"..tostring(userID).."/groups/primary/role"
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)

	if IsSuccess then
		local DecodedData = http:JSONDecode(Result)

		self.group = {
			id = DecodedData["group"]["id"],
			name = DecodedData["group"]["name"],
			description = DecodedData["group"]["description"],
			owner = {
				buildersClubMembershipType = DecodedData["group"]["buildersClubMembershipType"],
				hasVerifiedBadge = DecodedData["group"]["hasVerifiedBadge"],
				userId = DecodedData["group"]["userId"],
				username = DecodedData["group"]["username"],
				displayName = DecodedData["group"]["displayName"]
			},
			shout = DecodedData["shout"],
			isBuildersClubOnly = DecodedData["isBuildersClubOnly"],
			publicEntryAllowed = DecodedData["publicEntryAllowed"],
			hasVerifiedBadge = DecodedData["hasVerifiedBadge"]
		}
		self.role = {
			id = DecodedData["role"]["id"],
			name = DecodedData["role"]["name"],
			rank = DecodedData["role"]["rank"]
		}

		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return self
		else
			return self
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetGameInfo(universeId: number, PrintSuccess: boolean)
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetGameInfo.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API = "https://games.roproxy.com/v1/games?universeIds="..tostring(universeId)
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)
	
	if IsSuccess then
		local DecodedData = http:JSONDecode(Result)["data"][1]

		self.id = DecodedData["id"]
		self.rootPlaceId = DecodedData["rootPlaceId"]
		self.name = DecodedData["name"]
		self.description = DecodedData["description"]
		self.sourceName = DecodedData["sourceName"]
		self.sourceDescription = DecodedData["sourceDescription"]
		self.creator = {
			["id"] = DecodedData["creator"]["id"],
			["name"] = DecodedData["creator"]["name"],
			["type"] = DecodedData["creator"]["type"],
			["isRNVAccount"] = DecodedData["creator"]["isRNVAccount"]
		}
		self.price = DecodedData["price"]
		self.allowedGearGenres = DecodedData["allowedGearGenres"]
		self.isGenreEnforced = DecodedData["isGenreEnforced"]
		self.copyingAllowed = DecodedData["copyingAllowed"]
		self.playing = DecodedData["playing"]
		self.visits = DecodedData["visits"]
		self.maxPlayers = DecodedData["maxPlayers"]
		self.created = DecodedData["created"]
		self.updated = DecodedData["updated"]
		self.studioAccessToApisAllowed = DecodedData["studioAccessToApisAllowed"]
		self.createVipServersAllowed = DecodedData["createVipServersAllowed"]
		self.universeAvatarType = DecodedData["universeAvatarType"]
		self.genre = DecodedData["genre"]
		self.isAllGenre = DecodedData["isAllGenre"]
		self.isFavoritedByUser = DecodedData["isFavoritedByUser"]
		self.favoritedCount = DecodedData["favoritedCount"]

		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return self
		else
			return self
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetGameVisits(universeId: number, PrintSuccess: boolean)
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetGameVisits.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API = "https://games.roproxy.com/v1/games?universeIds="..tostring(universeId)
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)

	if IsSuccess then
		local DecodedData = http:JSONDecode(Result)["data"][1]

		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return DecodedData["visits"]
		else
			return DecodedData["visits"]
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetServers(placeId: number, serverType: string, sortOrder: string,limit: number,cursor: string,ServerList: any, PrintSuccess: boolean)
	
	--//error checking
	
	assert(sortOrder=="Asc"or sortOrder=="Desc","Sort Order must be Asc or Desc")
	assert(limit==10 or limit==25 or limit==50 or limit==100, "Limit must be a number and must be one of these Values {\n 10,\n 25,\n 50,\n 100\n}")
	assert(serverType=="Public"or serverType=="Friend" or serverType=="VIP", "serverType must be { Public or Friend or VIP }")
	
	--//end of error checking
	
	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetServers.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API
	if cursor == nil then
		API = "https://games.roproxy.com/v1/games/"..tostring(placeId).."/servers/"..tostring(serverType).."?sortOrder="..tostring(sortOrder).."&limit="..tostring(limit)--&cursor=0
	end
	if cursor ~= nil then
		local API = "https://games.roproxy.com/v1/games/"..tostring(placeId).."/servers/"..tostring(serverType).."?sortOrder="..tostring(sortOrder).."&limit="..tostring(limit).."&cursor="..tostring(cursor)
	end
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)

	if IsSuccess then
		local Data = http:JSONDecode(Result)
		local PreviousPageCursor = Data["previousPageCursor"]
		local NextPageCursor = Data["nextPageCursor"]
		local DecodedData = Data["data"]
		
		if ServerList == nil then
			self.Servers = {}
		end
		if ServerList ~= nil then
			self.Servers = ServerList
		end
		
		--//Server Adder
		if #DecodedData > 0 then
			for i=1, #DecodedData do
				self.Servers[DecodedData[i]["id"]] = DecodedData[i]
			end
		end
		
		--if NextPageCursor ~= nil and NextPageCursor ~= PreviousPageCursor then
		--	print("Searching for more Servers!")
		--	api:GetServers(
		--		placeId,
		--		serverType,
		--		sortOrder,
		--		limit,
		--		NextPageCursor,
		--		self.Servers
		--	)
		--end
		--//End of Server Adder
		
		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return self
		else
			return self
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

function api:GetServerById(placeId: number, serverType: string, sortOrder: string,limit: number,cursor: string,ServerId: number, PrintSuccess: boolean)

	--//error checking

	assert(sortOrder=="Asc"or sortOrder=="Desc","Sort Order must be Asc or Desc")
	assert(limit==10 or limit==25 or limit==50 or limit==100, "Limit must be a number and must be one of these Values {\n 10,\n 25,\n 50,\n 100\n}")
	assert(serverType=="Public"or serverType=="Friend" or serverType=="VIP", "serverType must be { Public or Friend or VIP }")
	assert(ServerId~=nil, "ServerId must not be nil")

	--//end of error checking

	local self = {
		__index = function(Table,index)
			warn("You tried to Index",index," with GetServerById.\n",[[
			1. Check if there was a Warning Message in the output from APIFunctions (ModuleScript)
			2. Make sure you put a valid index from the Table you are indexing.
			3. If any of those Steps didn't help then Reply to this DevForum post with the error: https://devforum.roblox.com/t/roblox-api-module-v13/1849268
			]])
		end,
	}
	local API
	if cursor == nil then
		API = "https://games.roproxy.com/v1/games/"..tostring(placeId).."/servers/"..tostring(serverType).."?sortOrder="..tostring(sortOrder).."&limit="..tostring(limit)--&cursor=0
	end
	if cursor ~= nil then
		local API = "https://games.roproxy.com/v1/games/"..tostring(placeId).."/servers/"..tostring(serverType).."?sortOrder="..tostring(sortOrder).."&limit="..tostring(limit).."&cursor="..tostring(cursor)
	end
	local IsSuccess, Result = pcall(function()
		return http:GetAsync(API)
	end)

	if IsSuccess then
		local Data = http:JSONDecode(Result)
		local PreviousPageCursor = Data["previousPageCursor"]
		local NextPageCursor = Data["nextPageCursor"]
		local DecodedData = Data["data"]
		local CurrentServer

		--//Server Adder
		if #DecodedData > 0 then
			for i=1, #DecodedData do
				if DecodedData[i]["id"] == ServerId then
					CurrentServer = DecodedData[i]["id"]
				end
			end
		end

		if NextPageCursor ~= nil and NextPageCursor ~= PreviousPageCursor and CurrentServer == nil then
			print("Searching for more Servers!")
			api:GetServers(
				placeId,
				serverType,
				sortOrder,
				limit,
				NextPageCursor,
				self.Servers
			)
		end
		--//End of Server Adder

		if PrintSuccess == true then
			print([[
			
			
 ____    __  __  ____     ____     ____    ____    ____       
/\  _`\ /\ \/\ \/\  _`\  /\  _`\  /\  _`\ /\  _`\ /\  _`\     
\ \,\L\_\ \ \ \ \ \ \/\_\\ \ \/\_\\ \ \L\_\ \,\L\_\ \,\L\_\   
 \/_\__ \\ \ \ \ \ \ \/_/_\ \ \/_/_\ \  _\L\/_\__ \\/_\__ \   
   /\ \L\ \ \ \_\ \ \ \L\ \\ \ \L\ \\ \ \L\ \/\ \L\ \/\ \L\ \ 
   \ `\____\ \_____\ \____/ \ \____/ \ \____/\ `\____\ `\____\
    \/_____/\/_____/\/___/   \/___/   \/___/  \/_____/\/_____/
    
    
]])
			return CurrentServer
		else
			return CurrentServer
		end
	end

	if not IsSuccess then
		warn([[
		
		
 ____    ____    ____    _____   ____       
/\  _`\ /\  _`\ /\  _`\ /\  __`\/\  _`\     
\ \ \L\_\ \ \L\ \ \ \L\ \ \ \/\ \ \ \L\ \   
 \ \  _\L\ \ ,  /\ \ ,  /\ \ \ \ \ \ ,  /   
  \ \ \L\ \ \ \\ \\ \ \\ \\ \ \_\ \ \ \\ \  
   \ \____/\ \_\ \_\ \_\ \_\ \_____\ \_\ \_\
    \/___/  \/_/\/ /\/_/\/ /\/_____/\/_/\/ /
    
    
]],Result)
	end
end

return api
